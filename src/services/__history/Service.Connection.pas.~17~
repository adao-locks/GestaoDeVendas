unit Service.Connection;

interface

uses
  System.SysUtils,
  System.Classes,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.VCLUI.Wait,
  Data.DB,
  FireDAC.Comp.Client,
  FireDAC.Comp.UI,
  FireDAC.Phys.FBDef,
  FireDAC.Phys.IBBase,
  FireDAC.Phys.FB,
  System.IniFiles, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.Comp.DataSet;

type
  TServiceConnection = class(TDataModule)
    FDConn: TFDConnection;
    WaitCursor: TFDGUIxWaitCursor;
    FBDriverLink: TFDPhysFBDriverLink;
    QRYFilial: TFDQuery;
    QRYFilialEMPRESA_ID: TIntegerField;
    QRYFilialNOME: TStringField;
    QRYFilialCNPJ: TStringField;
    QRYFilialTELEFONE: TStringField;
    QRYFilialEMAIL: TStringField;
    QRYFilialENDERECO: TStringField;
    QRYFilialDATA_CRIACAO: TDateField;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  ServiceConnection: TServiceConnection;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TServiceConnection.DataModuleCreate(Sender: TObject);
var
  LIniFile    :TIniFile;
  LDatabase   :string;
  LUser_Name  :string;
  LPassword   :string;
  LServidor   :string;
  LPort       :integer;
  LPath       :string;

begin

  try

    FDConn.Connected := false;

    LPath := ExtractFileDir(ParamStr(0)) + '\login.ini';
    //      FDPhysFBDriverLink.VendorHome := ExtractFileDir(ParamStr(0)) + '\dlls';

    LIniFile := TIniFile.Create(LPath);

    LDatabase   := LIniFile.ReadString('connection','Path', LDatabase);
    LServidor   := LIniFile.ReadString('connection','Host', LServidor);
    LPort       := LIniFile.ReadInteger('connection','Port', LPort);

    LUser_Name  := 'SYSDBA';
    LPassword   := 'masterkey';

    FDConn.Params.Values['Database']      := LDatabase;
    FDConn.Params.Values['User_Name']      := LUser_Name;
    FDConn.Params.Values['Password']      := LPassword;
    FDConn.Params.Values['Server']      := LServidor;
    FDConn.Params.Values['Port']      := LPort.ToString;

    //FDConn.Connected := true;

  finally

    FreeAndNil(LIniFile);

  end;
end;

end.
